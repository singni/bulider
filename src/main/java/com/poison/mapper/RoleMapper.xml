<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.poison.mapper.RoleMapper">
    <resultMap id="BaseResultMap" type="com.poison.domain.Role">
        <id column="ROLE_ID" property="roleId" jdbcType="VARCHAR"/>
        <result column="NAME" property="name" jdbcType="VARCHAR"/>
        <result column="REMARK" property="remark" jdbcType="VARCHAR"/>
        <result column="ORDER_NO" property="orderNo" jdbcType="INTEGER"/>
        <result column="CREATE_BY" property="createBy" jdbcType="VARCHAR"/>
        <result column="CREATE_DEPT" property="createDept" jdbcType="VARCHAR"/>
        <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="UPDATE_BY" property="updateBy" jdbcType="VARCHAR"/>
        <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    ROLE_ID, NAME, REMARK, ORDER_NO, CREATE_BY, CREATE_DEPT, CREATE_TIME, UPDATE_BY, 
    UPDATE_TIME
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.poison.domain.RoleExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from role_p
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from role_p
        where ROLE_ID = #{roleId,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from role_p
    where ROLE_ID = #{roleId,jdbcType=VARCHAR}
  </delete>
    <delete id="deleteByExample" parameterType="com.poison.domain.RoleExample">
        delete from role_p
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.poison.domain.Role">
    insert into role_p (ROLE_ID, NAME, REMARK, 
      ORDER_NO, CREATE_BY, CREATE_DEPT, 
      CREATE_TIME, UPDATE_BY, UPDATE_TIME
      )
    values (#{roleId,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{orderNo,jdbcType=INTEGER}, #{createBy,jdbcType=VARCHAR}, #{createDept,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.poison.domain.Role">
        insert into role_p
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="roleId != null">
                ROLE_ID,
            </if>
            <if test="name != null">
                NAME,
            </if>
            <if test="remark != null">
                REMARK,
            </if>
            <if test="orderNo != null">
                ORDER_NO,
            </if>
            <if test="createBy != null">
                CREATE_BY,
            </if>
            <if test="createDept != null">
                CREATE_DEPT,
            </if>
            <if test="createTime != null">
                CREATE_TIME,
            </if>
            <if test="updateBy != null">
                UPDATE_BY,
            </if>
            <if test="updateTime != null">
                UPDATE_TIME,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="roleId != null">
                #{roleId,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="orderNo != null">
                #{orderNo,jdbcType=INTEGER},
            </if>
            <if test="createBy != null">
                #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="createDept != null">
                #{createDept,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.poison.domain.RoleExample" resultType="java.lang.Integer">
        select count(*) from role_p
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update role_p
        <set>
            <if test="record.roleId != null">
                ROLE_ID = #{record.roleId,jdbcType=VARCHAR},
            </if>
            <if test="record.name != null">
                NAME = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.remark != null">
                REMARK = #{record.remark,jdbcType=VARCHAR},
            </if>
            <if test="record.orderNo != null">
                ORDER_NO = #{record.orderNo,jdbcType=INTEGER},
            </if>
            <if test="record.createBy != null">
                CREATE_BY = #{record.createBy,jdbcType=VARCHAR},
            </if>
            <if test="record.createDept != null">
                CREATE_DEPT = #{record.createDept,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null">
                CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateBy != null">
                UPDATE_BY = #{record.updateBy,jdbcType=VARCHAR},
            </if>
            <if test="record.updateTime != null">
                UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update role_p
        set ROLE_ID = #{record.roleId,jdbcType=VARCHAR},
        NAME = #{record.name,jdbcType=VARCHAR},
        REMARK = #{record.remark,jdbcType=VARCHAR},
        ORDER_NO = #{record.orderNo,jdbcType=INTEGER},
        CREATE_BY = #{record.createBy,jdbcType=VARCHAR},
        CREATE_DEPT = #{record.createDept,jdbcType=VARCHAR},
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
        UPDATE_BY = #{record.updateBy,jdbcType=VARCHAR},
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.poison.domain.Role">
        update role_p
        <set>
            <if test="name != null">
                NAME = #{name,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                REMARK = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="orderNo != null">
                ORDER_NO = #{orderNo,jdbcType=INTEGER},
            </if>
            <if test="createBy != null">
                CREATE_BY = #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="createDept != null">
                CREATE_DEPT = #{createDept,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                UPDATE_BY = #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where ROLE_ID = #{roleId,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.poison.domain.Role">
    update role_p
    set NAME = #{name,jdbcType=VARCHAR},
      REMARK = #{remark,jdbcType=VARCHAR},
      ORDER_NO = #{orderNo,jdbcType=INTEGER},
      CREATE_BY = #{createBy,jdbcType=VARCHAR},
      CREATE_DEPT = #{createDept,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATE_BY = #{updateBy,jdbcType=VARCHAR},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP}
    where ROLE_ID = #{roleId,jdbcType=VARCHAR}
  </update>

    <select id="findRoleByUser" parameterType="java.lang.String" resultMap="BaseResultMap">
        select *from role_p where ROLE_ID=(select ROLE_ID from   role_user_p  where USER_ID=#{id}) ;
    </select>
</mapper>